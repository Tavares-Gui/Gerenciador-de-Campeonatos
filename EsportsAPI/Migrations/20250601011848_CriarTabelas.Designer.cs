// <auto-generated />
using System;
using EsportsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EsportsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250601011848_CriarTabelas")]
    partial class CriarTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EsportsAPI.Models.Campeonato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Campeonatos");
                });

            modelBuilder.Entity("EsportsAPI.Models.CampeonatoEquipe", b =>
                {
                    b.Property<int>("CampeonatoId")
                        .HasColumnType("int");

                    b.Property<int>("EquipeId")
                        .HasColumnType("int");

                    b.HasKey("CampeonatoId", "EquipeId");

                    b.HasIndex("EquipeId");

                    b.ToTable("CampeonatoEquipes");
                });

            modelBuilder.Entity("EsportsAPI.Models.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("EsportsAPI.Models.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EquipeId");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("EsportsAPI.Models.CampeonatoEquipe", b =>
                {
                    b.HasOne("EsportsAPI.Models.Campeonato", "Campeonato")
                        .WithMany("CampeonatoEquipes")
                        .HasForeignKey("CampeonatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EsportsAPI.Models.Equipe", "Equipe")
                        .WithMany("CampeonatoEquipes")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campeonato");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("EsportsAPI.Models.Participante", b =>
                {
                    b.HasOne("EsportsAPI.Models.Equipe", "Equipe")
                        .WithMany("Participantes")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("EsportsAPI.Models.Campeonato", b =>
                {
                    b.Navigation("CampeonatoEquipes");
                });

            modelBuilder.Entity("EsportsAPI.Models.Equipe", b =>
                {
                    b.Navigation("CampeonatoEquipes");

                    b.Navigation("Participantes");
                });
#pragma warning restore 612, 618
        }
    }
}
